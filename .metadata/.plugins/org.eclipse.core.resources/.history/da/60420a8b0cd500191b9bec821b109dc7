package solution_tutorial2;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class week2_3_1ver {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		String str = null;
		String[] recode = new String[2];
		Queue<String> guest = new LinkedList<String>();
		ArrayList<String> food = new ArrayList<String>();

		int pi = 0, ham = 0, not = 0;

		while (input.hasNext()) {
			str = input.nextLine();
			recode = str.trim().split(" ");
			if (recode[0].contentEquals("E")){
				System.out.print("Pizza: " + pi + "\nHamburger: " + ham + "\nNothing: " + not);
				guest.clear();
				food.clear();
				pi = 0;
				ham = 0;
				not = 0;
				continue;
				}
			if (recode[0].equals("O") && guest.isEmpty() && !food.isEmpty()) {// 손님이 없음, food있음
				if (food.contains(recode[1])) {// 요구에 맞는 food가 있음
					food.remove(recode[1]);
					if (recode[1].equals("Pizza"))
						pi++;
					else
						ham++;
					continue;

				} else if (recode[1].equals("Any")) {
					if (food.remove(0).equals("Pizza"))
						pi++;
					else
						ham++;
					continue;
				} else {
					guest.offer(recode[1]);
					continue;
				}
			} else if (recode[0].equals("O") && guest.isEmpty() && food.isEmpty()) {// 손님이 없고, food 없음
				guest.offer(recode[1]);
				continue;
			} else if (recode[0].equals("O") && !guest.isEmpty() && guest.size() < 2) {// 기다리는 손님있음
				guest.offer(recode[1]);
				continue;
			} else if (recode[0].equals("O") && guest.size() == 2) { // 기다리는 손님이2명
				not++;
				continue;
			}
			if (recode[0].equals("F") && !guest.isEmpty()) {// 손님이 있음
				if (!guest.isEmpty() && guest.peek().equals(recode[1])) {// 손님 요구와 같아 없어짐.
					System.out.print(guest.peek());
					if (recode[1].equals("Pizza"))
						pi++;
					else
						ham++;
					guest.poll();
					continue;
				} else if (!guest.isEmpty() && guest.peek().equals("Any")) {// any 포함.
					if (recode[1].equals("Pizza"))
						pi++;
					else
						ham++;
					guest.poll();
					continue;
				}
			} else if (recode[0].equals("F") && guest.isEmpty()) { // 손님 없음
				food.add(recode[1]);
			}
		}
		
		input.close();
	}

}
