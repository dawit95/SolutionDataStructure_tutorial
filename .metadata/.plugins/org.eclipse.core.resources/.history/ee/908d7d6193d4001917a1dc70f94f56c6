package solution_tutorial2;

import java.util.Scanner;
import java.util.Stack;

public class week2_1 {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		Stack<Integer> stack = new Stack<Integer>();
		String[] str = new String[1000];
		int[] num = new int[1000];
		String first,result = null;
		int temp;

		while (input.hasNextLine()) {
			first = input.nextLine();
			
			for (int i = 0; i < first.length(); i++) {
				num[i] = (byte) first.charAt(i) - 65;
			}
			
			for (int i = 0; i < first.length(); i++) {
				if(i==0&&num[i]>=0&&num[i]<=9) {
					result=Integer.toString(num[i]);
				}else if(i==0&&((num[i]==15)||(num[i]==18)||(num[i]==19)||(num[i]==21))) { //연산자로 시작
					System.out.println("Error");
					break;
				}
				if(i>0&&num[i]>=0&&num[i]<=9) {
					result = result.concat(Integer.toString(num[i-1]));
					if(i==first.length()-1&&stack.isEmpty())
						System.out.print(result);
				} else if(result!=null&&stack.isEmpty()&&((num[i]==15)||(num[i]==18)||(num[i]==19)||(num[i]==21))) {// 처음 숫자와 연산
					stack.push(Integer.parseInt(result));
					stack.push(num[i]);
					result = null;
				}else if(i>0&&((num[i]==15)||(num[i]==18)||(num[i]==19)||(num[i]==21))) {//연산자 중복
					if(((num[i-1]==15)||(num[i-1]==18)||(num[i-1]==19)||(num[i-1]==21))) {
						System.out.println("Error");
						break;
					} else {
						if(stack.pop()==15) {
							temp = stack.pop()+ Integer.parseInt(result);
						}
					}
				} else if(i==num.length-1&&!stack.isEmpty()&&((num[i]==15)||(num[i]==18)||(num[i]==19)||(num[i]==21))) {// 연산자로 끝남
					System.out.println("Error");
					break;
				}
			}

		}
		input.close();
	}
}
